plugins {
    id 'com.android.library'
    id 'kotlin-android'

}

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'


def versionMajor = 1
def versionMinor = 0
def versionPatch = 0

def localProperties = new Properties()
localProperties.load(project.rootProject.file('mylocal.properties').newDataInputStream())

//Maven Central
ext {
    PUBLISH_GROUP_ID = 'com.3xcool'
    PUBLISH_VERSION = "${versionMajor}.${versionMinor}.${versionPatch}"
    PUBLISH_ARTIFACT_ID = 'lookdown'

    repoName = 'sonatype'

    libraryDescription = 'Download Manager using Coroutine (Queue, Conflate and Concurrent), Flow and Fileman with Cancel and Resume'
    libraryUrl = 'https://github.com/3xcool/LookDown'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'

    developerId = '3xcool'
    developerName = 'Andre Filgueiras'
    developerEmail = 'alg.filgueiras@gmail.com'

    gitConnection = 'scm:git:github.com/3xcool/LookDown.git'
    developerConnection = 'scm:git:ssh://github.com/3xcool/LookDown.git'
    scmUrl = 'https://github.com/3xcool/LookDown'
}


android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    signingConfigs {
        release {
            storeFile rootProject.file('filgs_key.keystore')
            storePassword localProperties.getProperty("signing.password")
            keyAlias localProperties.getProperty("signing.keyAlias")
            keyPassword localProperties.getProperty("signing.password")
        }

        debug {
            storeFile rootProject.file('filgs_key.keystore')
            storePassword localProperties.getProperty("signing.password")
            keyAlias localProperties.getProperty("signing.keyAlias")
            keyPassword localProperties.getProperty("signing.password")
        }
    }

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

//    implementation 'com.3xcool.utility:coroexecutor:0.1.0'
    implementation 'com.3xcool.utility:fileman:2.1.5'

    //Kotlin Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.1"

    //ViewModel
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0-alpha03'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'


    //Truth
    testImplementation 'com.google.truth:truth:1.0.1'
    androidTestImplementation "com.google.truth:truth:1.0.1"
}

task deleteJar(type: Delete) {
    delete 'libs/jars/lookdown.jar'
}

//tutorial to create jar: https://stackoverflow.com/questions/21712714/how-to-make-a-jar-out-from-an-android-studio-project
task createJar(type: Copy) {
//    from('build/intermediates/bundles/release/') //don't work
    from('build/intermediates/packaged-classes/release/')
    into('libs/jars/')
    include('classes.jar')
    rename('classes.jar', 'lookdown.jar')
}

createJar.dependsOn(deleteJar, build)


//apply from: 'bintray.script'
//apply from: "${rootProject.projectDir}/publish-mavencentral.gradle"
apply from: "publish-mavencentral.gradle"